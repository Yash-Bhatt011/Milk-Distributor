<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  <style>
    body {
      background-color: #f5f7fa;
      font-family: 'Inter', sans-serif;
    }
    .container {
      max-width: 1400px;
      padding: 2rem 1rem;
    }
    .page-header {
      background: linear-gradient(135deg, #6366f1, #a855f7);
      color: white;
      padding: 2rem;
      border-radius: 12px;
      margin-bottom: 2rem;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }
    .card {
      border: none;
      border-radius: 12px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.08);
      overflow: hidden;
    }
    .table {
      margin-bottom: 0;
      background: white;
    }
    .table th {
      background: #f8fafc;
      border-top: none;
      padding: 1rem;
      font-weight: 600;
      color: #1e293b;
    }
    .table td {
      vertical-align: middle;
      padding: 1rem;
      border-color: #f1f5f9;
    }
    .table-hover tbody tr:hover {
      background: #f8fafc;
    }
    .btn-action {
      padding: 0.5rem;
      border-radius: 8px;
      transition: all 0.2s;
    }
    .btn-action:hover {
      transform: translateY(-1px);
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .modal-content {
      border: none;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }
    .modal-header {
      border-bottom: none;
      padding: 1.5rem 2rem;
      background: #f8fafc;
    }
    .modal-title {
      font-weight: 600;
      color: #1e293b;
    }
    .modal-body {
      padding: 2rem;
    }
    .form-label {
      font-weight: 500;
      color: #1e293b;
      margin-bottom: 0.5rem;
    }
    .form-control {
      border-radius: 8px;
      border: 1px solid #e2e8f0;
      padding: 0.75rem 1rem;
      transition: all 0.2s;
    }
    .form-control:focus {
      border-color: #6366f1;
      box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
    }
    .badge {
      padding: 0.5em 1em;
      border-radius: 12px;
      font-weight: 500;
    }
    .alert {
      border-radius: 8px;
      margin-bottom: 1.5rem;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }
    @media (max-width: 768px) {
      .page-header {
        flex-direction: column;
        gap: 1rem;
        text-align: center;
      }
      .table-responsive {
        border-radius: 12px;
        overflow: hidden;
      }
    }
  </style>
  <meta name="csrf-token" content="<%= csrfToken %>">
</head>
<body>
<div class="container">
  <!-- Header -->
  <div class="page-header d-flex justify-content-between align-items-center">
    <h1 class="mb-0">Manage Distributors</h1>
    <button class="btn btn-light btn-lg" data-bs-toggle="modal" data-bs-target="#addDistributorModal">
      <i class="fas fa-plus me-2"></i>Add Distributor
    </button>
  </div>

  <!-- Distributors List -->
  <div class="card">
    <div class="card-body p-0">
      <div class="table-responsive">
        <table class="table table-hover">
          <thead>
            <tr>
              <th>Name</th>
              <th>Email</th>
              <th>Phone</th>
              <th>Area</th>
              <th>Customers</th>
              <th>Status</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% distributors.forEach(distributor => { %>
              <tr data-id="<%= distributor._id %>">
                <td><%= distributor.name %></td>
                <td><%= distributor.email %></td>
                <td><%= distributor.phone %></td>
                <td><%= distributor.distributorFields?.assignedArea %></td>
                <td><%= distributor.customerCount %></td>
                <td>
                  <span class="badge bg-<%= distributor.active ? 'success' : 'danger' %>">
                    <%= distributor.active ? 'Active' : 'Inactive' %>
                  </span>
                </td>
                <td>
                  <div class="btn-group" role="group">
                    <button class="btn btn-sm btn-action btn-outline-primary" onclick="viewDistributor('<%= distributor._id %>')">
                      <i class="fas fa-eye"></i>
                    </button>
                    <button class="btn btn-sm btn-action btn-outline-warning" onclick="editDistributor('<%= distributor._id %>')">
                      <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn btn-sm btn-action btn-outline-danger" id="delete-<%= distributor._id %>" onclick="deleteDistributor('<%= distributor._id %>')">
                      <i class="fas fa-trash"></i>
                    </button>
                  </div>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- Add Distributor Modal -->
  <div class="modal fade" id="addDistributorModal">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Add New Distributor</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form action="/admin/distributors" method="POST" id="addDistributorForm">
          <input type="hidden" name="_csrf" value="<%= csrfToken %>">
          <div class="modal-body">
            <div class="row">
              <div class="col-md-6">
                <div class="mb-4">
                  <label class="form-label required">Name</label>
                  <input type="text" name="name" class="form-control" required>
                </div>
                <div class="mb-4">
                  <label class="form-label required">Email</label>
                  <input type="email" name="email" class="form-control" required>
                </div>
                <div class="mb-4">
                  <label class="form-label required">Password</label>
                  <input type="password" name="password" class="form-control" required>
                </div>
                <div class="mb-4">
                  <label class="form-label required">Phone</label>
                  <input type="tel" name="phone" class="form-control" required>
                </div>
              </div>
              <div class="col-md-6">
                <div class="mb-4">
                  <label class="form-label required">Assigned Area</label>
                  <input type="text" name="assignedArea" class="form-control" required>
                </div>
                <div class="mb-4">
                  <label class="form-label">Vehicle Number</label>
                  <input type="text" name="vehicleNumber" class="form-control">
                </div>
                <div class="mb-4">
                  <label class="form-label">Address</label>
                  <input type="text" name="street" class="form-control mb-2" placeholder="Street">
                  <input type="text" name="city" class="form-control mb-2" placeholder="City">
                  <input type="text" name="state" class="form-control mb-2" placeholder="State">
                  <input type="text" name="zipCode" class="form-control" placeholder="ZIP Code">
                </div>
              </div>
            </div>
          </div>
          <div class="modal-footer border-0 pt-0">
            <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" id="addDistributorSubmit" class="btn btn-primary">Add Distributor</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Edit Distributor Modal -->
  <div class="modal fade" id="editDistributorModal">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Edit Distributor</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <form id="editDistributorForm">
          <input type="hidden" name="_csrf" value="<%= csrfToken %>">
          <input type="hidden" id="editDistributorId" name="id">
          <div class="modal-body">
            <div class="mb-4">
              <label class="form-label">Name</label>
              <input type="text" id="editName" name="name" class="form-control" required>
            </div>
            <div class="mb-4">
              <label class="form-label">Phone</label>
              <input type="tel" id="editPhone" name="phone" class="form-control" required>
            </div>
            <div class="mb-4">
              <label class="form-label">Assigned Area</label>
              <input type="text" id="editArea" name="assignedArea" class="form-control" required>
            </div>
            <div class="mb-4">
              <label class="form-label">Vehicle Number</label>
              <input type="text" id="editVehicle" name="vehicleNumber" class="form-control">
            </div>
            <div class="form-check form-switch mb-4">
              <input type="checkbox" id="editActive" name="active" class="form-check-input">
              <label class="form-check-label">Active Status</label>
            </div>
          </div>
          <div class="modal-footer border-0 pt-0">
            <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" id="editDistributorSubmit" class="btn btn-primary">Save Changes</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- View Distributor Details Modal -->
  <div class="modal fade" id="viewDistributorModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Distributor Details</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div id="distributorInfo"></div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="/js/admin/distributors.js"></script>

<script>
// Update apiCall function to include CSRF token
async function apiCall(url, method, data = null) {
  try {
    const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
    const options = {
      method,
      headers: {
        'Content-Type': 'application/json',
        'CSRF-Token': csrfToken
      }
    };
    if (data) {
      options.body = JSON.stringify(data);
    }
    const response = await fetch(url, options);
    const result = await response.json();
    
    if (!response.ok) {
      throw new Error(result.message || 'Server error occurred');
    }
    return result;
  } catch (err) {
    console.error('API Error:', err);
    throw err;
  }
}

// Show loading spinner
function showLoading(elementId) {
  const element = document.getElementById(elementId);
  element.innerHTML = '<div class="spinner-border spinner-border-sm" role="status"></div>';
  element.disabled = true;
}

// Hide loading spinner
function hideLoading(elementId, originalText) {
  const element = document.getElementById(elementId);
  element.innerHTML = originalText;
  element.disabled = false;
}

// Show error message
function showError(message) {
  const alertDiv = document.createElement('div');
  alertDiv.className = 'alert alert-danger alert-dismissible fade show';
  alertDiv.innerHTML = `
    ${message}
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  `;
  document.querySelector('.container').insertBefore(alertDiv, document.querySelector('.card'));
  setTimeout(() => alertDiv.remove(), 5000);
}

// Show success message
function showSuccess(message) {
  const alertDiv = document.createElement('div');
  alertDiv.className = 'alert alert-success alert-dismissible fade show';
  alertDiv.innerHTML = `
    ${message}
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  `;
  document.querySelector('.container').insertBefore(alertDiv, document.querySelector('.card'));
  setTimeout(() => alertDiv.remove(), 5000);
}

// Distributor management functions
async function viewDistributor(id) {
  try {
    const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
    const response = await fetch(`/admin/distributors/${id}`, {
      headers: {
        'CSRF-Token': csrfToken
      }
    });
    
    if (!response.ok) throw new Error('Failed to fetch distributor details');
    const data = await response.json();
    const distributor = data.distributor || data; // Handle both response structures
    
    const detailsHTML = `
      <div class="row">
        <div class="col-md-6">
          <h6 class="mb-3 fw-bold">Basic Information</h6>
          <div class="card p-3 mb-3">
            <p><strong>Name:</strong> ${distributor.name || 'N/A'}</p>
            <p><strong>Email:</strong> ${distributor.email || 'N/A'}</p>
            <p><strong>Phone:</strong> ${distributor.phone || 'N/A'}</p>
            <p><strong>Area:</strong> ${distributor.distributorFields?.assignedArea || 'N/A'}</p>
            <p><strong>Vehicle:</strong> ${distributor.distributorFields?.vehicleNumber || 'N/A'}</p>
            <p><strong>Status:</strong> 
              <span class="badge bg-${distributor.active ? 'success' : 'danger'}">
                ${distributor.active ? 'Active' : 'Inactive'}
              </span>
            </p>
          </div>
        </div>
        
        <div class="col-md-6">
          <h6 class="mb-3 fw-bold">Customer List</h6>
          <div class="card p-3">
            ${distributor.customers?.length ? `
              <div class="table-responsive">
                <table class="table table-sm">
                  <thead>
                    <tr>
                      <th>Name</th>
                      <th>Phone</th>
                      <th>Status</th>
                    </tr>
                  </thead>
                  <tbody>
                    ${distributor.customers.map(customer => `
                      <tr>
                        <td>${customer.name || 'N/A'}</td>
                        <td>${customer.phone || 'N/A'}</td>
                        <td>
                          <span class="badge bg-${customer.customerFields?.active ? 'success' : 'danger'}">
                            ${customer.customerFields?.active ? 'Active' : 'Inactive'}
                          </span>
                        </td>
                      </tr>
                    `).join('')}
                  </tbody>
                </table>
              </div>
            ` : '<p class="mb-0">No customers assigned</p>'}
          </div>
        </div>
      </div>
    `;
    
    document.getElementById('distributorInfo').innerHTML = detailsHTML;
    new bootstrap.Modal(document.getElementById('viewDistributorModal')).show();
  } catch (err) {
    console.error('Error:', err);
    showError('Error loading distributor details: ' + err.message);
  }
}

async function editDistributor(id) {
  try {
    const response = await fetch(`/admin/distributors/${id}`);
    if (!response.ok) throw new Error('Failed to fetch distributor data');
    
    const data = await response.json();
    const distributor = data.distributor || data; // Handle both response structures
    
    // Populate form fields with null checks
    document.getElementById('editDistributorId').value = distributor._id;
    document.getElementById('editName').value = distributor.name || '';
    document.getElementById('editPhone').value = distributor.phone || '';
    document.getElementById('editArea').value = distributor.distributorFields?.assignedArea || '';
    document.getElementById('editVehicle').value = distributor.distributorFields?.vehicleNumber || '';
    document.getElementById('editActive').checked = distributor.active || false;
    
    new bootstrap.Modal(document.getElementById('editDistributorModal')).show();
  } catch (err) {
    console.error('Error:', err);
    showError('Error loading distributor data');
  }
}

async function deleteDistributor(id) {
  if (!confirm('Are you sure you want to delete this distributor?')) {
    return;
  }

  const btnId = `delete-${id}`;
  try {
    showLoading(btnId);
    const result = await apiCall(`/admin/distributors/${id}`, 'DELETE');
    if (result.success) {
      showSuccess(result.message);
      setTimeout(() => location.reload(), 1000);
    }
  } catch (err) {
    showError(err.message || 'Failed to delete distributor');
  } finally {
    hideLoading(btnId, '<i class="fas fa-trash"></i>');
  }
}

// Handle edit form submission
document.getElementById('editDistributorForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const submitBtn = document.getElementById('editDistributorSubmit');
    submitBtn.disabled = true;
    
    try {
        const id = document.getElementById('editDistributorId').value;
        const formData = {
            name: document.getElementById('editName').value.trim(),
            phone: document.getElementById('editPhone').value.trim(),
            distributorFields: {
                assignedArea: document.getElementById('editArea').value.trim(),
                vehicleNumber: document.getElementById('editVehicle').value.trim()
            },
            active: document.getElementById('editActive').checked,
            _csrf: document.querySelector('input[name="_csrf"]').value
        };

        const result = await apiCall(`/admin/distributors/${id}`, 'PUT', formData);
        
        if (result.success) {
            const modal = bootstrap.Modal.getInstance(document.getElementById('editDistributorModal'));
            modal.hide();
            showSuccess('Distributor updated successfully');
            setTimeout(() => location.reload(), 1000);
        }
    } catch (err) {
        showError(err.message || 'Error updating distributor');
    } finally {
        submitBtn.disabled = false;
    }
});

// Enhanced form validation
document.getElementById('addDistributorForm').addEventListener('submit', async (e) => {
  e.preventDefault();
  
  const form = e.target;
  if (!form.checkValidity()) {
    form.classList.add('was-validated');
    return;
  }

  const submitBtn = form.querySelector('button[type="submit"]');
  const formData = new FormData(form);
  const data = Object.fromEntries(formData.entries());

  try {
    showLoading(submitBtn.id);
    const result = await apiCall('/admin/distributors', 'POST', data);
    if (result.success) {
      location.reload();
    }
  } catch (err) {
    showError(err.message || 'Failed to create distributor');
  } finally {
    hideLoading(submitBtn.id, 'Add Distributor');
  }
});

// Add client-side validation for phone numbers
document.querySelectorAll('input[type="tel"]').forEach(input => {
  input.addEventListener('input', (e) => {
    const phone = e.target.value.replace(/\D/g, '');
    if (phone.length < 10) {
      e.target.setCustomValidity('Phone number must be at least 10 digits');
    } else {
      e.target.setCustomValidity('');
    }
  });
});

// Add validation for email format
document.querySelectorAll('input[type="email"]').forEach(input => {
  input.addEventListener('input', (e) => {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(e.target.value)) {
      e.target.setCustomValidity('Please enter a valid email address');
    } else {
      e.target.setCustomValidity('');
    }
  });
});

// Form validation
document.querySelectorAll('form').forEach(form => {
  form.addEventListener('submit', function(e) {
    if (!form.checkValidity()) {
      e.preventDefault();
      e.stopPropagation();
    }
    form.classList.add('was-validated');
  });
});
</script>
</body>
</html>